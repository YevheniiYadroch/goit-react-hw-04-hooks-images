{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","api/imageApi.js","App.jsx","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","onClick","image","src","webformatURL","largeImageURL","alt","tags","ImageGallery","images","map","id","Button","Modal","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","e","code","target","currentTarget","fetchImagesWithQuery","searchQuery","pageNumber","undefined","axios","get","then","response","data","hits","App","useState","setImages","isLoading","setIsLoading","setError","setSearchQuery","setPageNumber","showModal","setShowModal","modalImage","setModalImage","preventDefault","value","catch","error","finally","reset","dataset","color","height","width","prevState","setTimeout","scrollTo","top","document","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0WAsBeA,MApBf,YAAkC,IAAbC,EAAY,EAAZA,SACjB,OACI,wBAAQC,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaD,SAAUA,EAAvC,UACI,wBAAQE,KAAK,SAASD,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAEJ,uBACIA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mCCNjBC,MARf,YAA+C,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MACjC,OACI,oBAAID,QAASA,EAASN,UAAU,mBAAhC,SACI,qBAAKQ,IAAKD,EAAME,aAAc,aAAYF,EAAMG,cAAeC,IAAKJ,EAAMK,KAAMZ,UAAU,8B,MCUvFa,MAVf,YAA4C,IAApBC,EAAmB,EAAnBA,OAAQR,EAAW,EAAXA,QAC5B,OACI,oBAAIN,UAAU,eAAd,SACKc,EAAOC,KAAI,SAAAR,GAAK,OACb,cAAC,EAAD,CAAiCA,MAAOA,EAAOD,QAASA,GAAjCC,EAAMS,U,MCC9BC,MANf,YAA8B,IAAZX,EAAW,EAAXA,QACd,OACI,wBAAQN,UAAU,SAASM,QAASA,EAApC,wB,MC6BOY,MA9Bf,YAAoC,IAAnBX,EAAkB,EAAlBA,MAAOY,EAAW,EAAXA,QAEpBC,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,UAAWC,GAC3B,WACJF,OAAOG,oBAAoB,UAAWD,MAE3C,IAEH,IAAMA,EAAgB,SAAAE,GACH,WAAXA,EAAEC,MACFP,KAUR,OACI,qBAAKb,QAPmB,SAAAmB,GACpBA,EAAEE,SAAWF,EAAEG,eACfT,KAK+BnB,UAAU,UAA7C,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,cAAcQ,IAAKD,EAAOI,IAAI,U,iBChB9CkB,EATc,SAACC,EAAaC,GAIzC,YAHmBC,IAAfD,IACFA,EAAa,GAERE,IACJC,IADI,qCAC8BJ,EAD9B,iBACkDC,EADlD,gGAEJI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,S,iBCuErBC,MArEf,WACE,MAA4BC,mBAAS,IAArC,mBAAO1B,EAAP,KAAe2B,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAcI,GAAd,WACA,EAAsCJ,mBAAS,IAA/C,mBAAOV,EAAP,KAAoBe,EAApB,KACA,EAAoCL,mBAAS,GAA7C,mBAAOT,EAAP,KAAmBe,EAAnB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KA6CA,OACE,sBAAKlD,UAAU,MAAf,UACE,cAAC,EAAD,CAAWD,SA7CK,SAAA0B,GAClBA,EAAE0B,iBACFR,GAAa,GACbE,EAAepB,EAAEE,OAAO,GAAGyB,OAC3BN,EAAc,GACdjB,EAAqBJ,EAAEE,OAAO,GAAGyB,OAC9BjB,MAAK,SAAArB,GACJ2B,EAAU3B,MAEXuC,OAAM,SAAAC,GAAK,OAAIV,EAASU,MACxBC,SAAQ,kBAAMZ,GAAa,MAC9BlB,EAAEE,OAAO6B,WAmCP,cAAC,EAAD,CAAclD,QAfA,SAAAmB,GAChByB,EAAczB,EAAEE,OAAO8B,QAAQlD,OAC/ByC,GAAa,IAauBlC,OAAQA,IACzC4B,GAAa,cAAC,IAAD,CACZ1C,UAAU,SACVC,KAAK,OACLyD,MAAM,UACNC,OAAQ,IACRC,MAAO,MAER9C,EAAO,IAAM,cAAC,EAAD,CAAQR,QAxCT,SAAAmB,GACfkB,GAAa,GACbG,GAAc,SAAAe,GAAS,OAAIA,EAAY,KACvChC,EAAqBC,EAAaC,EAAa,GAC5CI,MAAK,SAAArB,GACJ2B,GAAU,SAAAoB,GAAS,4BAASA,GAAT,YAAuB/C,UAE3CuC,OAAM,SAAAC,GAAK,OAAIV,EAASU,MACxBC,SAAQ,kBAAMZ,GAAa,MAC9BmB,YAAW,WACTzC,OAAO0C,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,aAEX,QA2BArB,GAAa,cAAC,EAAD,CAAOxC,MAAO0C,EAAY9B,QAnBzB,SAAAM,GACjBuB,GAAa,GACbE,EAAc,WC7CHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BX,M","file":"static/js/main.81b1c1c3.chunk.js","sourcesContent":["import './Searchbar.css'\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Searchbar;","function ImageGalleryItem({ onClick, image }) {\r\n    return (\r\n        <li onClick={onClick} className=\"ImageGalleryItem\">\r\n            <img src={image.webformatURL} data-image={image.largeImageURL} alt={image.tags} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ImageGalleryItem;","import ImageGalleryItem from './ImageGalleryItem';\r\nimport './ImageGallery.css'\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(image => (\r\n                <ImageGalleryItem key={image.id} image={image} onClick={onClick} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ImageGallery;","import './Button.css'\r\n\r\nfunction Button({ onClick }) {\r\n    return (\r\n        <button className=\"Button\" onClick={onClick}>Load more</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import { useEffect } from 'react'\r\nimport './Modal.css'\r\n\r\nfunction Modal({ image, onClose }) {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeydown);\r\n        return (() => {\r\n            window.removeEventListener('keydown', handleKeydown)\r\n        })\r\n    }, [])\r\n\r\n    const handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.target === e.currentTarget) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleBackdropClick} className=\"Overlay\">\r\n            <div className=\"Modal\">\r\n                <img className=\"Modal-image\" src={image} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import axios from 'axios';\r\n\r\nconst fetchImagesWithQuery = (searchQuery, pageNumber) => {\r\n  if (pageNumber === undefined) {\r\n    pageNumber = 1;\r\n  }\r\n  return axios\r\n    .get(`https://pixabay.com/api/?q=${searchQuery}&page=${pageNumber}&key=22510887-179de1f125426041fbaaee690&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default fetchImagesWithQuery;","import './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport fetchImagesWithQuery from './api/imageApi'\nimport Loader from \"react-loader-spinner\";\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n\n  const searchImage = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setSearchQuery(e.target[1].value);\n    setPageNumber(1);\n    fetchImagesWithQuery(e.target[1].value)\n      .then(images => {\n        setImages(images);\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n    e.target.reset();\n  }\n\n  const loadMore = e => {\n    setIsLoading(true);\n    setPageNumber(prevState => prevState + 1);\n    fetchImagesWithQuery(searchQuery, pageNumber + 1)\n      .then(images => {\n        setImages(prevState => ([...prevState, ...images]));\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 400);\n  }\n\n  const openModal = e => {\n    setModalImage(e.target.dataset.image);\n    setShowModal(true);\n  }\n\n  const closeModal = e => {\n    setShowModal(false);\n    setModalImage('');\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={searchImage} />\n      <ImageGallery onClick={openModal} images={images} />\n      {isLoading && <Loader\n        className=\"Loader\"\n        type=\"Puff\"\n        color=\"#3f51b5\"\n        height={200}\n        width={200}\n      />}\n      {images[0] && <Button onClick={loadMore} />}\n      {showModal && <Modal image={modalImage} onClose={closeModal} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}